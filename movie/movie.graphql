type Query {
    movie_with_id(_id: String!): Movie
    movies_by_min_rate(_rate: Float!): [Movie]
    movies_by_director(_director: String!) : [Movie]
    movie_with_title(_title: String!): Movie
}

type Mutation {
    update_movie_rate(_id: String!, _rate: Float!): Movie
    delete_movie_from_id(_id: String!): MutationResult
    create_movie(input: MovieInput!): MutationResult
}

type Actor {
    id: String!
    firstname: String!
    lastname: String!
    birthyear: Int!
    films: [String!]
}

type Movie {
    id: String!
    title: String!
    director: String!
    rating: Float!
    actors: [Actor]
}

input MovieInput {
    title: String!
    director: String!
    rating: Float!
}

type MutationResult {
    success: Boolean!
    error: String
}

# TODO : Add ActorInput